ARM GAS  /tmp/ccPlx0h3.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  23              	MX_GPIO_Init:
  24              	.LFB51:
  25              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include <stdbool.h>
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* USER CODE END PTD */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
ARM GAS  /tmp/ccPlx0h3.s 			page 2


  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* USER CODE END PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/main.c **** UART_HandleTypeDef huart2;
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE BEGIN PV */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* USER CODE END PV */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  51:Core/Src/main.c **** void SystemClock_Config(void);
  52:Core/Src/main.c **** static void MX_GPIO_Init(void);
  53:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  54:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* USER CODE END PFP */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  59:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** bool Button_ReadPush(void) {
  62:Core/Src/main.c ****   GPIO_PinState button_read;
  63:Core/Src/main.c ****   static bool button_state;
  64:Core/Src/main.c ****   static uint32_t button_cout;
  65:Core/Src/main.c **** 
  66:Core/Src/main.c ****   button_read = HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_13);
  67:Core/Src/main.c ****   if (button_read == GPIO_PIN_RESET) {
  68:Core/Src/main.c ****     button_cout++;
  69:Core/Src/main.c ****   } else {
  70:Core/Src/main.c ****     button_cout = 0;
  71:Core/Src/main.c ****     button_state = false;
  72:Core/Src/main.c ****   }
  73:Core/Src/main.c **** 
  74:Core/Src/main.c ****   if (button_cout >= 40) {
  75:Core/Src/main.c ****     if (button_state == false) {
  76:Core/Src/main.c ****       button_state = true;
  77:Core/Src/main.c **** 
  78:Core/Src/main.c ****       return true;
  79:Core/Src/main.c ****     }
  80:Core/Src/main.c ****   }
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   return false;
  83:Core/Src/main.c **** }
  84:Core/Src/main.c **** 
  85:Core/Src/main.c **** /* USER CODE END 0 */
  86:Core/Src/main.c **** 
  87:Core/Src/main.c **** /**
  88:Core/Src/main.c ****   * @brief  The application entry point.
  89:Core/Src/main.c ****   * @retval int
  90:Core/Src/main.c ****   */
ARM GAS  /tmp/ccPlx0h3.s 			page 3


  91:Core/Src/main.c **** int main(void)
  92:Core/Src/main.c **** {
  93:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* USER CODE END 1 */
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 100:Core/Src/main.c ****   HAL_Init();
 101:Core/Src/main.c **** 
 102:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 103:Core/Src/main.c **** 
 104:Core/Src/main.c ****   /* USER CODE END Init */
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****   /* Configure the system clock */
 107:Core/Src/main.c ****   SystemClock_Config();
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****   /* USER CODE END SysInit */
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   /* Initialize all configured peripherals */
 114:Core/Src/main.c ****   MX_GPIO_Init();
 115:Core/Src/main.c ****   MX_USART2_UART_Init();
 116:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 117:Core/Src/main.c **** 
 118:Core/Src/main.c ****   /* USER CODE END 2 */
 119:Core/Src/main.c **** 
 120:Core/Src/main.c ****   /* Infinite loop */
 121:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 122:Core/Src/main.c ****   while (1)
 123:Core/Src/main.c ****   {
 124:Core/Src/main.c ****     if (Button_ReadPush()) {
 125:Core/Src/main.c ****       HAL_GPIO_TogglePin(LD2_GPIO_Port, LD2_Pin);
 126:Core/Src/main.c ****       HAL_Delay(100);
 127:Core/Src/main.c ****     }
 128:Core/Src/main.c ****     /* USER CODE END WHILE */
 129:Core/Src/main.c **** 
 130:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 131:Core/Src/main.c ****   }
 132:Core/Src/main.c ****   /* USER CODE END 3 */
 133:Core/Src/main.c **** }
 134:Core/Src/main.c **** 
 135:Core/Src/main.c **** /**
 136:Core/Src/main.c ****   * @brief System Clock Configuration
 137:Core/Src/main.c ****   * @retval None
 138:Core/Src/main.c ****   */
 139:Core/Src/main.c **** void SystemClock_Config(void)
 140:Core/Src/main.c **** {
 141:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 142:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 143:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 144:Core/Src/main.c **** 
 145:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 146:Core/Src/main.c ****   */
 147:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
ARM GAS  /tmp/ccPlx0h3.s 			page 4


 148:Core/Src/main.c **** 
 149:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 150:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 151:Core/Src/main.c ****   */
 152:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_MSI;
 153:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 154:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 155:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_5;
 156:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 157:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 158:Core/Src/main.c ****   {
 159:Core/Src/main.c ****     Error_Handler();
 160:Core/Src/main.c ****   }
 161:Core/Src/main.c **** 
 162:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 163:Core/Src/main.c ****   */
 164:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 165:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 166:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_MSI;
 167:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 168:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 169:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 170:Core/Src/main.c **** 
 171:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 172:Core/Src/main.c ****   {
 173:Core/Src/main.c ****     Error_Handler();
 174:Core/Src/main.c ****   }
 175:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART2;
 176:Core/Src/main.c ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 177:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 178:Core/Src/main.c ****   {
 179:Core/Src/main.c ****     Error_Handler();
 180:Core/Src/main.c ****   }
 181:Core/Src/main.c **** }
 182:Core/Src/main.c **** 
 183:Core/Src/main.c **** /**
 184:Core/Src/main.c ****   * @brief USART2 Initialization Function
 185:Core/Src/main.c ****   * @param None
 186:Core/Src/main.c ****   * @retval None
 187:Core/Src/main.c ****   */
 188:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 189:Core/Src/main.c **** {
 190:Core/Src/main.c **** 
 191:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 192:Core/Src/main.c **** 
 193:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 194:Core/Src/main.c **** 
 195:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 196:Core/Src/main.c **** 
 197:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 198:Core/Src/main.c ****   huart2.Instance = USART2;
 199:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 200:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 201:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 202:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 203:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 204:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
ARM GAS  /tmp/ccPlx0h3.s 			page 5


 205:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 206:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 207:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 208:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 209:Core/Src/main.c ****   {
 210:Core/Src/main.c ****     Error_Handler();
 211:Core/Src/main.c ****   }
 212:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 213:Core/Src/main.c **** 
 214:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 215:Core/Src/main.c **** 
 216:Core/Src/main.c **** }
 217:Core/Src/main.c **** 
 218:Core/Src/main.c **** /**
 219:Core/Src/main.c ****   * @brief GPIO Initialization Function
 220:Core/Src/main.c ****   * @param None
 221:Core/Src/main.c ****   * @retval None
 222:Core/Src/main.c ****   */
 223:Core/Src/main.c **** static void MX_GPIO_Init(void)
 224:Core/Src/main.c **** {
  26              		.loc 1 224 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 70B5     		push	{r4, r5, r6, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 16
  33              		.cfi_offset 4, -16
  34              		.cfi_offset 5, -12
  35              		.cfi_offset 6, -8
  36              		.cfi_offset 14, -4
  37 0002 88B0     		sub	sp, sp, #32
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 48
 225:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  40              		.loc 1 225 3 view .LVU1
  41              		.loc 1 225 20 is_stmt 0 view .LVU2
  42 0004 1422     		movs	r2, #20
  43 0006 0021     		movs	r1, #0
  44 0008 03A8     		add	r0, sp, #12
  45 000a FFF7FEFF 		bl	memset
  46              	.LVL0:
 226:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 227:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 228:Core/Src/main.c **** 
 229:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 230:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  47              		.loc 1 230 3 is_stmt 1 view .LVU3
  48              	.LBB4:
  49              		.loc 1 230 3 view .LVU4
  50              		.loc 1 230 3 view .LVU5
  51 000e 1B4B     		ldr	r3, .L2
  52 0010 D96A     		ldr	r1, [r3, #44]
  53 0012 0422     		movs	r2, #4
  54 0014 1143     		orrs	r1, r2
  55 0016 D962     		str	r1, [r3, #44]
  56              		.loc 1 230 3 view .LVU6
ARM GAS  /tmp/ccPlx0h3.s 			page 6


  57 0018 D96A     		ldr	r1, [r3, #44]
  58 001a 0A40     		ands	r2, r1
  59 001c 0092     		str	r2, [sp]
  60              		.loc 1 230 3 view .LVU7
  61 001e 009A     		ldr	r2, [sp]
  62              	.LBE4:
  63              		.loc 1 230 3 view .LVU8
 231:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  64              		.loc 1 231 3 view .LVU9
  65              	.LBB5:
  66              		.loc 1 231 3 view .LVU10
  67              		.loc 1 231 3 view .LVU11
  68 0020 D96A     		ldr	r1, [r3, #44]
  69 0022 8022     		movs	r2, #128
  70 0024 1143     		orrs	r1, r2
  71 0026 D962     		str	r1, [r3, #44]
  72              		.loc 1 231 3 view .LVU12
  73 0028 D96A     		ldr	r1, [r3, #44]
  74 002a 0A40     		ands	r2, r1
  75 002c 0192     		str	r2, [sp, #4]
  76              		.loc 1 231 3 view .LVU13
  77 002e 019A     		ldr	r2, [sp, #4]
  78              	.LBE5:
  79              		.loc 1 231 3 view .LVU14
 232:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  80              		.loc 1 232 3 view .LVU15
  81              	.LBB6:
  82              		.loc 1 232 3 view .LVU16
  83              		.loc 1 232 3 view .LVU17
  84 0030 DA6A     		ldr	r2, [r3, #44]
  85 0032 0125     		movs	r5, #1
  86 0034 2A43     		orrs	r2, r5
  87 0036 DA62     		str	r2, [r3, #44]
  88              		.loc 1 232 3 view .LVU18
  89 0038 DB6A     		ldr	r3, [r3, #44]
  90 003a 2B40     		ands	r3, r5
  91 003c 0293     		str	r3, [sp, #8]
  92              		.loc 1 232 3 view .LVU19
  93 003e 029B     		ldr	r3, [sp, #8]
  94              	.LBE6:
  95              		.loc 1 232 3 view .LVU20
 233:Core/Src/main.c **** 
 234:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 235:Core/Src/main.c ****   HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);
  96              		.loc 1 235 3 view .LVU21
  97 0040 A026     		movs	r6, #160
  98 0042 F605     		lsls	r6, r6, #23
  99 0044 0022     		movs	r2, #0
 100 0046 2021     		movs	r1, #32
 101 0048 3000     		movs	r0, r6
 102 004a FFF7FEFF 		bl	HAL_GPIO_WritePin
 103              	.LVL1:
 236:Core/Src/main.c **** 
 237:Core/Src/main.c ****   /*Configure GPIO pin : B1_Pin */
 238:Core/Src/main.c ****   GPIO_InitStruct.Pin = B1_Pin;
 104              		.loc 1 238 3 view .LVU22
 105              		.loc 1 238 23 is_stmt 0 view .LVU23
ARM GAS  /tmp/ccPlx0h3.s 			page 7


 106 004e 8023     		movs	r3, #128
 107 0050 9B01     		lsls	r3, r3, #6
 108 0052 0393     		str	r3, [sp, #12]
 239:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 109              		.loc 1 239 3 is_stmt 1 view .LVU24
 110              		.loc 1 239 24 is_stmt 0 view .LVU25
 111 0054 8423     		movs	r3, #132
 112 0056 9B03     		lsls	r3, r3, #14
 113 0058 0493     		str	r3, [sp, #16]
 240:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 114              		.loc 1 240 3 is_stmt 1 view .LVU26
 115              		.loc 1 240 24 is_stmt 0 view .LVU27
 116 005a 0024     		movs	r4, #0
 117 005c 0594     		str	r4, [sp, #20]
 241:Core/Src/main.c ****   HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 118              		.loc 1 241 3 is_stmt 1 view .LVU28
 119 005e 03A9     		add	r1, sp, #12
 120 0060 0748     		ldr	r0, .L2+4
 121 0062 FFF7FEFF 		bl	HAL_GPIO_Init
 122              	.LVL2:
 242:Core/Src/main.c **** 
 243:Core/Src/main.c ****   /*Configure GPIO pin : LD2_Pin */
 244:Core/Src/main.c ****   GPIO_InitStruct.Pin = LD2_Pin;
 123              		.loc 1 244 3 view .LVU29
 124              		.loc 1 244 23 is_stmt 0 view .LVU30
 125 0066 2023     		movs	r3, #32
 126 0068 0393     		str	r3, [sp, #12]
 245:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 127              		.loc 1 245 3 is_stmt 1 view .LVU31
 128              		.loc 1 245 24 is_stmt 0 view .LVU32
 129 006a 0495     		str	r5, [sp, #16]
 246:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 130              		.loc 1 246 3 is_stmt 1 view .LVU33
 131              		.loc 1 246 24 is_stmt 0 view .LVU34
 132 006c 0594     		str	r4, [sp, #20]
 247:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 133              		.loc 1 247 3 is_stmt 1 view .LVU35
 134              		.loc 1 247 25 is_stmt 0 view .LVU36
 135 006e 0694     		str	r4, [sp, #24]
 248:Core/Src/main.c ****   HAL_GPIO_Init(LD2_GPIO_Port, &GPIO_InitStruct);
 136              		.loc 1 248 3 is_stmt 1 view .LVU37
 137 0070 03A9     		add	r1, sp, #12
 138 0072 3000     		movs	r0, r6
 139 0074 FFF7FEFF 		bl	HAL_GPIO_Init
 140              	.LVL3:
 249:Core/Src/main.c **** 
 250:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 251:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 252:Core/Src/main.c **** }
 141              		.loc 1 252 1 is_stmt 0 view .LVU38
 142 0078 08B0     		add	sp, sp, #32
 143              		@ sp needed
 144 007a 70BD     		pop	{r4, r5, r6, pc}
 145              	.L3:
 146              		.align	2
 147              	.L2:
 148 007c 00100240 		.word	1073876992
ARM GAS  /tmp/ccPlx0h3.s 			page 8


 149 0080 00080050 		.word	1342179328
 150              		.cfi_endproc
 151              	.LFE51:
 153              		.section	.text.Button_ReadPush,"ax",%progbits
 154              		.align	1
 155              		.global	Button_ReadPush
 156              		.syntax unified
 157              		.code	16
 158              		.thumb_func
 160              	Button_ReadPush:
 161              	.LFB47:
  61:Core/Src/main.c ****   GPIO_PinState button_read;
 162              		.loc 1 61 28 is_stmt 1 view -0
 163              		.cfi_startproc
 164              		@ args = 0, pretend = 0, frame = 0
 165              		@ frame_needed = 0, uses_anonymous_args = 0
 166 0000 10B5     		push	{r4, lr}
 167              	.LCFI2:
 168              		.cfi_def_cfa_offset 8
 169              		.cfi_offset 4, -8
 170              		.cfi_offset 14, -4
  62:Core/Src/main.c ****   static bool button_state;
 171              		.loc 1 62 3 view .LVU40
  63:Core/Src/main.c ****   static uint32_t button_cout;
 172              		.loc 1 63 3 view .LVU41
  64:Core/Src/main.c **** 
 173              		.loc 1 64 3 view .LVU42
  66:Core/Src/main.c ****   if (button_read == GPIO_PIN_RESET) {
 174              		.loc 1 66 3 view .LVU43
  66:Core/Src/main.c ****   if (button_read == GPIO_PIN_RESET) {
 175              		.loc 1 66 17 is_stmt 0 view .LVU44
 176 0002 8021     		movs	r1, #128
 177 0004 8901     		lsls	r1, r1, #6
 178 0006 1048     		ldr	r0, .L11
 179 0008 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 180              	.LVL4:
  67:Core/Src/main.c ****     button_cout++;
 181              		.loc 1 67 3 is_stmt 1 view .LVU45
  67:Core/Src/main.c ****     button_cout++;
 182              		.loc 1 67 6 is_stmt 0 view .LVU46
 183 000c 0028     		cmp	r0, #0
 184 000e 0DD1     		bne	.L5
  68:Core/Src/main.c ****   } else {
 185              		.loc 1 68 5 is_stmt 1 view .LVU47
  68:Core/Src/main.c ****   } else {
 186              		.loc 1 68 16 is_stmt 0 view .LVU48
 187 0010 0E4A     		ldr	r2, .L11+4
 188 0012 1368     		ldr	r3, [r2]
 189 0014 0133     		adds	r3, r3, #1
 190 0016 1360     		str	r3, [r2]
 191              	.L6:
  74:Core/Src/main.c ****     if (button_state == false) {
 192              		.loc 1 74 3 is_stmt 1 view .LVU49
  74:Core/Src/main.c ****     if (button_state == false) {
 193              		.loc 1 74 19 is_stmt 0 view .LVU50
 194 0018 0C4B     		ldr	r3, .L11+4
 195 001a 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccPlx0h3.s 			page 9


  74:Core/Src/main.c ****     if (button_state == false) {
 196              		.loc 1 74 6 view .LVU51
 197 001c 272B     		cmp	r3, #39
 198 001e 10D9     		bls	.L8
  75:Core/Src/main.c ****       button_state = true;
 199              		.loc 1 75 5 is_stmt 1 view .LVU52
  75:Core/Src/main.c ****       button_state = true;
 200              		.loc 1 75 22 is_stmt 0 view .LVU53
 201 0020 0B4B     		ldr	r3, .L11+8
 202 0022 1B78     		ldrb	r3, [r3]
  75:Core/Src/main.c ****       button_state = true;
 203              		.loc 1 75 8 view .LVU54
 204 0024 002B     		cmp	r3, #0
 205 0026 07D0     		beq	.L10
  82:Core/Src/main.c **** }
 206              		.loc 1 82 10 view .LVU55
 207 0028 0020     		movs	r0, #0
 208              	.LVL5:
  82:Core/Src/main.c **** }
 209              		.loc 1 82 10 view .LVU56
 210 002a 0BE0     		b	.L7
 211              	.LVL6:
 212              	.L5:
  70:Core/Src/main.c ****     button_state = false;
 213              		.loc 1 70 5 is_stmt 1 view .LVU57
  70:Core/Src/main.c ****     button_state = false;
 214              		.loc 1 70 17 is_stmt 0 view .LVU58
 215 002c 074B     		ldr	r3, .L11+4
 216 002e 0022     		movs	r2, #0
 217 0030 1A60     		str	r2, [r3]
  71:Core/Src/main.c ****   }
 218              		.loc 1 71 5 is_stmt 1 view .LVU59
  71:Core/Src/main.c ****   }
 219              		.loc 1 71 18 is_stmt 0 view .LVU60
 220 0032 074B     		ldr	r3, .L11+8
 221 0034 1A70     		strb	r2, [r3]
 222 0036 EFE7     		b	.L6
 223              	.L10:
  76:Core/Src/main.c **** 
 224              		.loc 1 76 7 is_stmt 1 view .LVU61
  76:Core/Src/main.c **** 
 225              		.loc 1 76 20 is_stmt 0 view .LVU62
 226 0038 054B     		ldr	r3, .L11+8
 227 003a 0122     		movs	r2, #1
 228 003c 1A70     		strb	r2, [r3]
  78:Core/Src/main.c ****     }
 229              		.loc 1 78 7 is_stmt 1 view .LVU63
  78:Core/Src/main.c ****     }
 230              		.loc 1 78 14 is_stmt 0 view .LVU64
 231 003e 0120     		movs	r0, #1
 232              	.LVL7:
  78:Core/Src/main.c ****     }
 233              		.loc 1 78 14 view .LVU65
 234 0040 00E0     		b	.L7
 235              	.LVL8:
 236              	.L8:
  82:Core/Src/main.c **** }
ARM GAS  /tmp/ccPlx0h3.s 			page 10


 237              		.loc 1 82 10 view .LVU66
 238 0042 0020     		movs	r0, #0
 239              	.LVL9:
 240              	.L7:
  83:Core/Src/main.c **** 
 241              		.loc 1 83 1 view .LVU67
 242              		@ sp needed
 243 0044 10BD     		pop	{r4, pc}
 244              	.L12:
 245 0046 C046     		.align	2
 246              	.L11:
 247 0048 00080050 		.word	1342179328
 248 004c 00000000 		.word	.LANCHOR0
 249 0050 00000000 		.word	.LANCHOR1
 250              		.cfi_endproc
 251              	.LFE47:
 253              		.section	.text.Error_Handler,"ax",%progbits
 254              		.align	1
 255              		.global	Error_Handler
 256              		.syntax unified
 257              		.code	16
 258              		.thumb_func
 260              	Error_Handler:
 261              	.LFB52:
 253:Core/Src/main.c **** 
 254:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 255:Core/Src/main.c **** 
 256:Core/Src/main.c **** /* USER CODE END 4 */
 257:Core/Src/main.c **** 
 258:Core/Src/main.c **** /**
 259:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 260:Core/Src/main.c ****   * @retval None
 261:Core/Src/main.c ****   */
 262:Core/Src/main.c **** void Error_Handler(void)
 263:Core/Src/main.c **** {
 262              		.loc 1 263 1 is_stmt 1 view -0
 263              		.cfi_startproc
 264              		@ Volatile: function does not return.
 265              		@ args = 0, pretend = 0, frame = 0
 266              		@ frame_needed = 0, uses_anonymous_args = 0
 267              		@ link register save eliminated.
 264:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 265:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 266:Core/Src/main.c ****   __disable_irq();
 268              		.loc 1 266 3 view .LVU69
 269              	.LBB7:
 270              	.LBI7:
 271              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
ARM GAS  /tmp/ccPlx0h3.s 			page 11


  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccPlx0h3.s 			page 12


  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccPlx0h3.s 			page 13


 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 272              		.loc 2 140 27 view .LVU70
 273              	.LBB8:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 274              		.loc 2 142 3 view .LVU71
 275              		.syntax divided
 276              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 277 0000 72B6     		cpsid i
 278              	@ 0 "" 2
 279              		.thumb
 280              		.syntax unified
 281              	.L14:
 282              	.LBE8:
 283              	.LBE7:
 267:Core/Src/main.c ****   while (1)
 284              		.loc 1 267 3 discriminator 1 view .LVU72
 268:Core/Src/main.c ****   {
 269:Core/Src/main.c ****   }
 285              		.loc 1 269 3 discriminator 1 view .LVU73
 267:Core/Src/main.c ****   while (1)
 286              		.loc 1 267 9 discriminator 1 view .LVU74
 287 0002 FEE7     		b	.L14
 288              		.cfi_endproc
 289              	.LFE52:
 291              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 292              		.align	1
 293              		.syntax unified
 294              		.code	16
 295              		.thumb_func
 297              	MX_USART2_UART_Init:
 298              	.LFB50:
 189:Core/Src/main.c **** 
 299              		.loc 1 189 1 view -0
 300              		.cfi_startproc
 301              		@ args = 0, pretend = 0, frame = 0
 302              		@ frame_needed = 0, uses_anonymous_args = 0
 303 0000 10B5     		push	{r4, lr}
 304              	.LCFI3:
 305              		.cfi_def_cfa_offset 8
 306              		.cfi_offset 4, -8
ARM GAS  /tmp/ccPlx0h3.s 			page 14


 307              		.cfi_offset 14, -4
 198:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 308              		.loc 1 198 3 view .LVU76
 198:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 309              		.loc 1 198 19 is_stmt 0 view .LVU77
 310 0002 0B48     		ldr	r0, .L18
 311 0004 0B4B     		ldr	r3, .L18+4
 312 0006 0360     		str	r3, [r0]
 199:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 313              		.loc 1 199 3 is_stmt 1 view .LVU78
 199:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 314              		.loc 1 199 24 is_stmt 0 view .LVU79
 315 0008 E123     		movs	r3, #225
 316 000a 5B02     		lsls	r3, r3, #9
 317 000c 4360     		str	r3, [r0, #4]
 200:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 318              		.loc 1 200 3 is_stmt 1 view .LVU80
 200:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 319              		.loc 1 200 26 is_stmt 0 view .LVU81
 320 000e 0023     		movs	r3, #0
 321 0010 8360     		str	r3, [r0, #8]
 201:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 322              		.loc 1 201 3 is_stmt 1 view .LVU82
 201:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 323              		.loc 1 201 24 is_stmt 0 view .LVU83
 324 0012 C360     		str	r3, [r0, #12]
 202:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 325              		.loc 1 202 3 is_stmt 1 view .LVU84
 202:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 326              		.loc 1 202 22 is_stmt 0 view .LVU85
 327 0014 0361     		str	r3, [r0, #16]
 203:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 328              		.loc 1 203 3 is_stmt 1 view .LVU86
 203:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 329              		.loc 1 203 20 is_stmt 0 view .LVU87
 330 0016 0C22     		movs	r2, #12
 331 0018 4261     		str	r2, [r0, #20]
 204:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 332              		.loc 1 204 3 is_stmt 1 view .LVU88
 204:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 333              		.loc 1 204 25 is_stmt 0 view .LVU89
 334 001a 8361     		str	r3, [r0, #24]
 205:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 335              		.loc 1 205 3 is_stmt 1 view .LVU90
 205:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 336              		.loc 1 205 28 is_stmt 0 view .LVU91
 337 001c C361     		str	r3, [r0, #28]
 206:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 338              		.loc 1 206 3 is_stmt 1 view .LVU92
 206:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 339              		.loc 1 206 30 is_stmt 0 view .LVU93
 340 001e 0362     		str	r3, [r0, #32]
 207:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 341              		.loc 1 207 3 is_stmt 1 view .LVU94
 207:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 342              		.loc 1 207 38 is_stmt 0 view .LVU95
 343 0020 4362     		str	r3, [r0, #36]
ARM GAS  /tmp/ccPlx0h3.s 			page 15


 208:Core/Src/main.c ****   {
 344              		.loc 1 208 3 is_stmt 1 view .LVU96
 208:Core/Src/main.c ****   {
 345              		.loc 1 208 7 is_stmt 0 view .LVU97
 346 0022 FFF7FEFF 		bl	HAL_UART_Init
 347              	.LVL10:
 208:Core/Src/main.c ****   {
 348              		.loc 1 208 6 view .LVU98
 349 0026 0028     		cmp	r0, #0
 350 0028 00D1     		bne	.L17
 216:Core/Src/main.c **** 
 351              		.loc 1 216 1 view .LVU99
 352              		@ sp needed
 353 002a 10BD     		pop	{r4, pc}
 354              	.L17:
 210:Core/Src/main.c ****   }
 355              		.loc 1 210 5 is_stmt 1 view .LVU100
 356 002c FFF7FEFF 		bl	Error_Handler
 357              	.LVL11:
 358              	.L19:
 359              		.align	2
 360              	.L18:
 361 0030 00000000 		.word	huart2
 362 0034 00440040 		.word	1073759232
 363              		.cfi_endproc
 364              	.LFE50:
 366              		.section	.text.SystemClock_Config,"ax",%progbits
 367              		.align	1
 368              		.global	SystemClock_Config
 369              		.syntax unified
 370              		.code	16
 371              		.thumb_func
 373              	SystemClock_Config:
 374              	.LFB49:
 140:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 375              		.loc 1 140 1 view -0
 376              		.cfi_startproc
 377              		@ args = 0, pretend = 0, frame = 112
 378              		@ frame_needed = 0, uses_anonymous_args = 0
 379 0000 00B5     		push	{lr}
 380              	.LCFI4:
 381              		.cfi_def_cfa_offset 4
 382              		.cfi_offset 14, -4
 383 0002 9DB0     		sub	sp, sp, #116
 384              	.LCFI5:
 385              		.cfi_def_cfa_offset 120
 141:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 386              		.loc 1 141 3 view .LVU102
 141:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 387              		.loc 1 141 22 is_stmt 0 view .LVU103
 388 0004 3822     		movs	r2, #56
 389 0006 0021     		movs	r1, #0
 390 0008 0EA8     		add	r0, sp, #56
 391 000a FFF7FEFF 		bl	memset
 392              	.LVL12:
 142:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 393              		.loc 1 142 3 is_stmt 1 view .LVU104
ARM GAS  /tmp/ccPlx0h3.s 			page 16


 142:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 394              		.loc 1 142 22 is_stmt 0 view .LVU105
 395 000e 1422     		movs	r2, #20
 396 0010 0021     		movs	r1, #0
 397 0012 09A8     		add	r0, sp, #36
 398 0014 FFF7FEFF 		bl	memset
 399              	.LVL13:
 143:Core/Src/main.c **** 
 400              		.loc 1 143 3 is_stmt 1 view .LVU106
 143:Core/Src/main.c **** 
 401              		.loc 1 143 28 is_stmt 0 view .LVU107
 402 0018 2422     		movs	r2, #36
 403 001a 0021     		movs	r1, #0
 404 001c 6846     		mov	r0, sp
 405 001e FFF7FEFF 		bl	memset
 406              	.LVL14:
 147:Core/Src/main.c **** 
 407              		.loc 1 147 3 is_stmt 1 view .LVU108
 408 0022 1A49     		ldr	r1, .L27
 409 0024 0A68     		ldr	r2, [r1]
 410 0026 1A4B     		ldr	r3, .L27+4
 411 0028 1A40     		ands	r2, r3
 412 002a 8023     		movs	r3, #128
 413 002c 1B01     		lsls	r3, r3, #4
 414 002e 1343     		orrs	r3, r2
 415 0030 0B60     		str	r3, [r1]
 152:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 416              		.loc 1 152 3 view .LVU109
 152:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 417              		.loc 1 152 36 is_stmt 0 view .LVU110
 418 0032 1023     		movs	r3, #16
 419 0034 0E93     		str	r3, [sp, #56]
 153:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 420              		.loc 1 153 3 is_stmt 1 view .LVU111
 153:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 421              		.loc 1 153 30 is_stmt 0 view .LVU112
 422 0036 0F3B     		subs	r3, r3, #15
 423 0038 1593     		str	r3, [sp, #84]
 154:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_5;
 424              		.loc 1 154 3 is_stmt 1 view .LVU113
 154:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_5;
 425              		.loc 1 154 41 is_stmt 0 view .LVU114
 426 003a 0023     		movs	r3, #0
 427 003c 1693     		str	r3, [sp, #88]
 155:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 428              		.loc 1 155 3 is_stmt 1 view .LVU115
 155:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 429              		.loc 1 155 35 is_stmt 0 view .LVU116
 430 003e A022     		movs	r2, #160
 431 0040 1202     		lsls	r2, r2, #8
 432 0042 1792     		str	r2, [sp, #92]
 156:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 433              		.loc 1 156 3 is_stmt 1 view .LVU117
 156:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 434              		.loc 1 156 34 is_stmt 0 view .LVU118
 435 0044 1893     		str	r3, [sp, #96]
 157:Core/Src/main.c ****   {
ARM GAS  /tmp/ccPlx0h3.s 			page 17


 436              		.loc 1 157 3 is_stmt 1 view .LVU119
 157:Core/Src/main.c ****   {
 437              		.loc 1 157 7 is_stmt 0 view .LVU120
 438 0046 0EA8     		add	r0, sp, #56
 439 0048 FFF7FEFF 		bl	HAL_RCC_OscConfig
 440              	.LVL15:
 157:Core/Src/main.c ****   {
 441              		.loc 1 157 6 view .LVU121
 442 004c 0028     		cmp	r0, #0
 443 004e 17D1     		bne	.L24
 164:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 444              		.loc 1 164 3 is_stmt 1 view .LVU122
 164:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 445              		.loc 1 164 31 is_stmt 0 view .LVU123
 446 0050 0F23     		movs	r3, #15
 447 0052 0993     		str	r3, [sp, #36]
 166:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 448              		.loc 1 166 3 is_stmt 1 view .LVU124
 166:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 449              		.loc 1 166 34 is_stmt 0 view .LVU125
 450 0054 0023     		movs	r3, #0
 451 0056 0A93     		str	r3, [sp, #40]
 167:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 452              		.loc 1 167 3 is_stmt 1 view .LVU126
 167:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 453              		.loc 1 167 35 is_stmt 0 view .LVU127
 454 0058 0B93     		str	r3, [sp, #44]
 168:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 455              		.loc 1 168 3 is_stmt 1 view .LVU128
 168:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 456              		.loc 1 168 36 is_stmt 0 view .LVU129
 457 005a 0C93     		str	r3, [sp, #48]
 169:Core/Src/main.c **** 
 458              		.loc 1 169 3 is_stmt 1 view .LVU130
 169:Core/Src/main.c **** 
 459              		.loc 1 169 36 is_stmt 0 view .LVU131
 460 005c 0D93     		str	r3, [sp, #52]
 171:Core/Src/main.c ****   {
 461              		.loc 1 171 3 is_stmt 1 view .LVU132
 171:Core/Src/main.c ****   {
 462              		.loc 1 171 7 is_stmt 0 view .LVU133
 463 005e 0021     		movs	r1, #0
 464 0060 09A8     		add	r0, sp, #36
 465 0062 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 466              	.LVL16:
 171:Core/Src/main.c ****   {
 467              		.loc 1 171 6 view .LVU134
 468 0066 0028     		cmp	r0, #0
 469 0068 0CD1     		bne	.L25
 175:Core/Src/main.c ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 470              		.loc 1 175 3 is_stmt 1 view .LVU135
 175:Core/Src/main.c ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 471              		.loc 1 175 38 is_stmt 0 view .LVU136
 472 006a 0223     		movs	r3, #2
 473 006c 0093     		str	r3, [sp]
 176:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 474              		.loc 1 176 3 is_stmt 1 view .LVU137
ARM GAS  /tmp/ccPlx0h3.s 			page 18


 176:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 475              		.loc 1 176 38 is_stmt 0 view .LVU138
 476 006e 0023     		movs	r3, #0
 477 0070 0493     		str	r3, [sp, #16]
 177:Core/Src/main.c ****   {
 478              		.loc 1 177 3 is_stmt 1 view .LVU139
 177:Core/Src/main.c ****   {
 479              		.loc 1 177 7 is_stmt 0 view .LVU140
 480 0072 6846     		mov	r0, sp
 481 0074 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 482              	.LVL17:
 177:Core/Src/main.c ****   {
 483              		.loc 1 177 6 view .LVU141
 484 0078 0028     		cmp	r0, #0
 485 007a 05D1     		bne	.L26
 181:Core/Src/main.c **** 
 486              		.loc 1 181 1 view .LVU142
 487 007c 1DB0     		add	sp, sp, #116
 488              		@ sp needed
 489 007e 00BD     		pop	{pc}
 490              	.L24:
 159:Core/Src/main.c ****   }
 491              		.loc 1 159 5 is_stmt 1 view .LVU143
 492 0080 FFF7FEFF 		bl	Error_Handler
 493              	.LVL18:
 494              	.L25:
 173:Core/Src/main.c ****   }
 495              		.loc 1 173 5 view .LVU144
 496 0084 FFF7FEFF 		bl	Error_Handler
 497              	.LVL19:
 498              	.L26:
 179:Core/Src/main.c ****   }
 499              		.loc 1 179 5 view .LVU145
 500 0088 FFF7FEFF 		bl	Error_Handler
 501              	.LVL20:
 502              	.L28:
 503              		.align	2
 504              	.L27:
 505 008c 00700040 		.word	1073770496
 506 0090 FFE7FFFF 		.word	-6145
 507              		.cfi_endproc
 508              	.LFE49:
 510              		.section	.text.main,"ax",%progbits
 511              		.align	1
 512              		.global	main
 513              		.syntax unified
 514              		.code	16
 515              		.thumb_func
 517              	main:
 518              	.LFB48:
  92:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 519              		.loc 1 92 1 view -0
 520              		.cfi_startproc
 521              		@ Volatile: function does not return.
 522              		@ args = 0, pretend = 0, frame = 0
 523              		@ frame_needed = 0, uses_anonymous_args = 0
 524 0000 10B5     		push	{r4, lr}
ARM GAS  /tmp/ccPlx0h3.s 			page 19


 525              	.LCFI6:
 526              		.cfi_def_cfa_offset 8
 527              		.cfi_offset 4, -8
 528              		.cfi_offset 14, -4
 100:Core/Src/main.c **** 
 529              		.loc 1 100 3 view .LVU147
 530 0002 FFF7FEFF 		bl	HAL_Init
 531              	.LVL21:
 107:Core/Src/main.c **** 
 532              		.loc 1 107 3 view .LVU148
 533 0006 FFF7FEFF 		bl	SystemClock_Config
 534              	.LVL22:
 114:Core/Src/main.c ****   MX_USART2_UART_Init();
 535              		.loc 1 114 3 view .LVU149
 536 000a FFF7FEFF 		bl	MX_GPIO_Init
 537              	.LVL23:
 115:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 538              		.loc 1 115 3 view .LVU150
 539 000e FFF7FEFF 		bl	MX_USART2_UART_Init
 540              	.LVL24:
 541              	.L30:
 122:Core/Src/main.c ****   {
 542              		.loc 1 122 3 view .LVU151
 124:Core/Src/main.c ****       HAL_GPIO_TogglePin(LD2_GPIO_Port, LD2_Pin);
 543              		.loc 1 124 5 view .LVU152
 124:Core/Src/main.c ****       HAL_GPIO_TogglePin(LD2_GPIO_Port, LD2_Pin);
 544              		.loc 1 124 9 is_stmt 0 view .LVU153
 545 0012 FFF7FEFF 		bl	Button_ReadPush
 546              	.LVL25:
 124:Core/Src/main.c ****       HAL_GPIO_TogglePin(LD2_GPIO_Port, LD2_Pin);
 547              		.loc 1 124 8 view .LVU154
 548 0016 0028     		cmp	r0, #0
 549 0018 FBD0     		beq	.L30
 125:Core/Src/main.c ****       HAL_Delay(100);
 550              		.loc 1 125 7 is_stmt 1 view .LVU155
 551 001a A020     		movs	r0, #160
 552 001c 2021     		movs	r1, #32
 553 001e C005     		lsls	r0, r0, #23
 554 0020 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 555              	.LVL26:
 126:Core/Src/main.c ****     }
 556              		.loc 1 126 7 view .LVU156
 557 0024 6420     		movs	r0, #100
 558 0026 FFF7FEFF 		bl	HAL_Delay
 559              	.LVL27:
 560 002a F2E7     		b	.L30
 561              		.cfi_endproc
 562              	.LFE48:
 564              		.global	huart2
 565              		.section	.bss.button_cout.1,"aw",%nobits
 566              		.align	2
 567              		.set	.LANCHOR0,. + 0
 570              	button_cout.1:
 571 0000 00000000 		.space	4
 572              		.section	.bss.button_state.0,"aw",%nobits
 573              		.set	.LANCHOR1,. + 0
 576              	button_state.0:
ARM GAS  /tmp/ccPlx0h3.s 			page 20


 577 0000 00       		.space	1
 578              		.section	.bss.huart2,"aw",%nobits
 579              		.align	2
 582              	huart2:
 583 0000 00000000 		.space	136
 583      00000000 
 583      00000000 
 583      00000000 
 583      00000000 
 584              		.text
 585              	.Letext0:
 586              		.file 3 "/opt/st/stm32cubeclt/GNU-tools-for-STM32/arm-none-eabi/include/machine/_default_types.h"
 587              		.file 4 "/opt/st/stm32cubeclt/GNU-tools-for-STM32/arm-none-eabi/include/sys/_stdint.h"
 588              		.file 5 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l053xx.h"
 589              		.file 6 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_def.h"
 590              		.file 7 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_rcc.h"
 591              		.file 8 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_rcc_ex.h"
 592              		.file 9 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_gpio.h"
 593              		.file 10 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_dma.h"
 594              		.file 11 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_uart.h"
 595              		.file 12 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal.h"
 596              		.file 13 "<built-in>"
ARM GAS  /tmp/ccPlx0h3.s 			page 21


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccPlx0h3.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccPlx0h3.s:23     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccPlx0h3.s:148    .text.MX_GPIO_Init:000000000000007c $d
     /tmp/ccPlx0h3.s:154    .text.Button_ReadPush:0000000000000000 $t
     /tmp/ccPlx0h3.s:160    .text.Button_ReadPush:0000000000000000 Button_ReadPush
     /tmp/ccPlx0h3.s:247    .text.Button_ReadPush:0000000000000048 $d
     /tmp/ccPlx0h3.s:254    .text.Error_Handler:0000000000000000 $t
     /tmp/ccPlx0h3.s:260    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccPlx0h3.s:292    .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/ccPlx0h3.s:297    .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/ccPlx0h3.s:361    .text.MX_USART2_UART_Init:0000000000000030 $d
     /tmp/ccPlx0h3.s:582    .bss.huart2:0000000000000000 huart2
     /tmp/ccPlx0h3.s:367    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccPlx0h3.s:373    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccPlx0h3.s:505    .text.SystemClock_Config:000000000000008c $d
     /tmp/ccPlx0h3.s:511    .text.main:0000000000000000 $t
     /tmp/ccPlx0h3.s:517    .text.main:0000000000000000 main
     /tmp/ccPlx0h3.s:566    .bss.button_cout.1:0000000000000000 $d
     /tmp/ccPlx0h3.s:570    .bss.button_cout.1:0000000000000000 button_cout.1
     /tmp/ccPlx0h3.s:576    .bss.button_state.0:0000000000000000 button_state.0
     /tmp/ccPlx0h3.s:577    .bss.button_state.0:0000000000000000 $d
     /tmp/ccPlx0h3.s:579    .bss.huart2:0000000000000000 $d

UNDEFINED SYMBOLS
memset
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_GPIO_ReadPin
HAL_UART_Init
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
HAL_GPIO_TogglePin
HAL_Delay
